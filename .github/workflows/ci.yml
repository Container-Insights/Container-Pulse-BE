name: dev-ci

on:
  push:
    branches: [ "main" ] #메인에 머지시 빌드
  # pull_request:
  #   branches: [ "main" ]

permissions: write-all ##모든 권한 한번에 전부 설정(추후에 최소 권한으로 바꿔야 함.)

env:
  DOCKER_IMAGE: sh80165/dev-container-mon-be

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.docker-version.outputs.NEW_TAG }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle 
      run: ./gradlew build -x test

    - name: Get Docker next version
      id: docker-version
      run: |
        # 레포지토리와 이미지 설정
        REPOSITORY="sh80165/dev-container-mon-be"
        
        # Docker Hub에서 태그 목록을 가져오기
        LATEST_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/$REPOSITORY/tags?page_size=10" | jq -r '.results[].name' | sort -V | tail -n 1)
        
        # 최신 버전이 없다면 0.0.1로 시작
        if [ -z "$LATEST_TAG" ]; then
        NEW_TAG="0.0.1"
        else
        # 버전 번호를 점(dot) 기준으로 나누기
          IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_TAG"
  
        # 마지막 숫자 증가시키기
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))
        
        # 새로운 버전 생성
          NEW_TAG="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
        fi 
        
        echo "NEW_TAG=$NEW_TAG" >> "$GITHUB_OUTPUT" ## GITHUB_ENV 환경변수에 추가.
         
        echo "New tag to be created: $NEW_TAG"

    - name: Docker build
      run: |
        echo "NEW_TAG: ${{ steps.docker-version.outputs.NEW_TAG }}"
        docker build --platform linux/amd64 -t "${{ env.DOCKER_IMAGE }}:${{ steps.docker-version.outputs.NEW_TAG }}" .

    - name: Dockerhub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push docker image to docker hub
      run: docker push "${{ env.DOCKER_IMAGE }}:${{ steps.docker-version.outputs.NEW_TAG }}"

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
